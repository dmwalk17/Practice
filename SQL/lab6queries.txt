*** Feedback begins with *** below each query result 
*** Score 40/40 pts.

SQL> --Donna Walker
SQL> set echo on
SQL> set pagesize 60
SQL> set linesize 120
SQL> clear columns
column Full_Name heading 'Full Name' format A20

--1.	Display the full name (ex. Tom R. Brown) of each aviation customer who has chartered 
--a plane from us.
select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name"
from avia_customer cus
where cus.cus_code in (select distinct cus_code from charter) 
order by cus.cus_lname, cus.cus_fname;

--*** Correct

--2.	Display the full name and customer balance of all aviation customers who have chartered planes 
--to Atlanta (ATL).
column Full_Name as "Full Name" format A20
select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name", 
cus.cus_balance as "Customer Balance"
from avia_customer cus
where cus.cus_code in (select distinct cus_code from charter where UPPER(charter.char_destination) = 'ATL') 
order by cus.cus_lname, cus.cus_fname;

--*** Correct

--3.	Display the full names (ex. Mr. Tom R Davis) and hire dates (ex. March 21, 2000) of all aviation 
-- employees who have earned ratings that have also been earned by employee 106. 
column Full_Name as "Full Name" format A20
select (emp.emp_fname||' '||emp.emp_Initial ||' '|| emp.emp_lname) as "Full_Name",  
to_char(emp.emp_hire_date, 'Month DD, YYYY') as "Hire Date"
from avia_employee emp
where emp_num in (select distinct emp_num from earnedrating 
where rtg_code in (select rtg_code from earnedrating where emp_num = 106))
order by emp.emp_lname, emp.emp_lname;

--*** Correct - nice work

--
-- 4.	Display the full name and date of birth (using 4-digit years) of each aviation 
-- employee who is younger than John Lange.
column Full_Name heading 'Full Name' format A20
select (emp.emp_fname||' '||emp.emp_Initial ||' '|| emp.emp_lname) as "Full_Name",  
to_char(emp.emp_dob, 'MM/DD/YYYY') as "Birth Date"
from avia_employee emp
where emp_dob > (select emp_dob from avia_employee emp where upper(emp.emp_fname) = 'JOHN' 
AND upper(emp.emp_lname) = 'LANGE')
order by emp.emp_lname, emp.emp_lname;

--*** Very Nice!  Now remember, this still needs refinement because it has to keep working even 
--***if there is more than one John Lange. ***SENT EMAIL***

--5.	Display the full name and phone number of each aviation customer who has chartered as 
-- many or more planes than aviation customer#10011.
column Full_Name HEADING 'Full Name' format A20
select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name", 
cus.cus_phone as "Phone #"
from avia_customer cus 
where cus.cus_code in (select charter.cus_code 
from charter 
group by charter.cus_code 
having count(*) >= (select count(*) as " " from charter where charter.cus_code = 10011));

-- *** OK, but Leona Dunne is customer 10011, so this can be improved
--*** by excluding her
--column Full_Name HEADING 'Full Name' format A20
--select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name", 
--cus.cus_phone as "Phone #"
--from avia_customer cus 
--where cus.cus_code in (select charter.cus_code 
--from charter 
--group by charter.cus_code 
--having count(*) >= (select count(*) as " " from charter where charter.cus_code = 10011))
--minus
--select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name", 
--cus.cus_phone as "Phone #"
--from avia_customer cus 
--where cus.cus_code = 10011;

--6.	Display the aircraft number, model code, manufacturer and model name of the aircraft 
-- that was most recently chartered. Hint: June 1, 2014 is more recent than June 1, 2013. 
-- Be sure that your query will still work if multiple aircraft were chartered on the same day. 
-- You are permitted to use one inner join to get the manufacturer and model name displayed as 
-- part of the result set. Your query must include at least one nested query to earn full credit.

select aircraft.ac_number, mod_code, model.mod_manufacturer, model.mod_name
from aircraft inner join model
using (mod_code)
where aircraft.ac_number in (select ac_number char_date
from charter
where char_date = (select max(char_date)
from charter));

--*** Correct

-- 7.	Display the aircraft number and model code of all aircraft that have a higher AVERAGE 
-- charter hours flown than aircraft#2778V.
select ac_number, mod_code
from aircraft
where ac_number in (select ac_number 
from charter
group by ac_number
having avg(char_hours_flown) > (select avg(char_hours_flown)
from charter
where ac_number = '2778V'));

--*** Correct

--8.	Display the full name and phone number of each aviation customer who has not 
-- chartered a plane 
column Full_Name HEADING 'Full Name' format A20
select (cus.cus_fname||' '||cus.cus_Initial ||' '|| cus.cus_lname) as "Full_Name", 
cus.cus_phone as "Phone #"
from avia_customer cus 
where cus_code not in (select distinct charter.cus_code from charter);

-- *** This is good; no need to make it more complicated than it has to be.

-- For queries#9, 10 and 11, use the SALESREP and SALESREP_LEADERS tables owned by user JJ. 
-- Your queries must be constructed using the relational operators union, intersect, or minus. 
-- Sales reps in the SALESREP_LEADER table have won a special award for selling a certain 
-- mount and brand of particular targeted products. Some of the people in the leader table 
-- no longer work for the company. All sales reps in the SALESREP table are current employees.
--
-- 9.	Display sales rep id, full name and highest degree earned of all sales reps that 
-- have won leader awards and are current employees.


column SALESREPID heading 'REP ID' format A8
column Full_Name HEADING 'FULL NAME' format A20
column highestdegree heading 'HIGHEST DEGREE' format A18
select SALESREPID, (firstname||' '||lastname) as "Full_Name",  highestdegree
from JJ.SALESREP
intersect
select SALESREPID, (firstname||' '||lastname) as "Full_Name",  highestdegree
from JJ.SALESREP_LEADER;

-- *** Correct 

--10.	Display sales rep id, full name and hire date of all sales reps that are 
--either current employees or have won leader awards.


--would include 'but not both' if she didn't want current employees that got awards
column Full_Name HEADING 'FULL NAME' format A20
(select SALESREPID, (firstname||' '||lastname) as "Full_Name",  hiredate
from JJ.SALESREP
Union
select SALESREPID, (firstname||' '||lastname) as "Full_Name",  hiredate
from JJ.SALESREP_LEADER);


--Ok, one in turned in lab was wrong, I had done union minus intersect to get current employee or winner
--This one is right.

--11.	We want to invite all sales leaders to a special ceremony in their honor. 
-- We have already sent email to existing employees using company email. However 
-- we wish to invite former leaders who are no longer employees. Write a query 
-- that will provide the appropriate contact information and insert a comment 
-- into your script explaining how the executive assistant can use the information 
-- to do the invitation. 


--The following database result can be used in labels to mail invitations to the former leaders 
--who are no longer employees.
column Full_Name HEADING 'FULL NAME' format A20
column address format A20
column city format A15
select SALESREPID, (firstname||' '||lastname) as "Full_Name", address, city, state, zipcode, homephone
from JJ.SALESREP_Leader
minus
select SALESREPID, (firstname||' '||lastname) as "Full_Name", address, city, state, zipcode, homephone
from JJ.SALESREP;


-- *** Very nice

--12.	Use the DECODE( ) statement to display the product name, description,  cost and selling priority 
--from user JJ’s PRODUCT table, where the selling priority is derived from the BRAND value as follows: 
--Discount => Low priority – don’t encourage, House => Only sell if customer requests it, 
--Premium => High Priority – Push!,  all others => Brand Unknown.
column Product heading 'PRODUCT NAME' format A30
column Descript heading DESCRIPTION format A38
select prod.productname as "Product", prod.description as "Descript", prod.cost, 
  decode(brand,
    'Discount', 'Low priority - don''t encourage',
    'House', 'Only sell if customer requests it',
    'Premium','High Priority - Push!',
    'Brand Unknown') as "SELLING PRIORITY"
    from jj.product prod;
                      
--*** Looks good

--13.	Use a CASE statement that produces the same result as #12. 
column Product heading 'PRODUCT NAME' format A30
column Descript heading DESCRIPTION format A40
select prod.productname as "Product", prod.description as "Descript", prod.cost, 
  (case
	when brand = 'Discount' then 'Low priority - don''t encourage'
    when brand = 'House' then 'Only sell if customer requests it'
    when brand = 'Premium' then 'High Priority - Push!'
    else 'Brand Unknown' 
	end) as "SELLING PRIORITY"
    from jj.product prod
	order by prod.cost;
	
--*** OK - good; can also be done more efficiently with a simple CASE (CASE brand ...when 'Value'...)
--select prod.productname as "Product", prod.description as "Descript", to_char(prod.cost,'L99.99') as "COST", 
--  (case brand
--	when 'Discount' then ('Low priority - don''t encourage')
--    when 'House' then ('Only sell if customer requests it')
--    when 'Premium' then ('High Priority - Push!')
--    else ('Brand Unknown') 
--	end) as "SELLING PRIORITY"
--    from jj.product prod
--	order by prod.cost;

--14.	Use a DECODE or CASE statement to display words for JJ’s PRODUCT COST column as follows:
-- $5.00 or below =>   “Low Price”
--Greater than $5.00 and less than $20.00 “Moderate Price”
--$20.00 and above “High Price”

column Product heading 'PRODUCT NAME' format A30
column descript heading DESCRIPTION format A40
select prod.productname as "Product", prod.description as "descript" , cost, 
  (case
	when prod.cost <= 5 then 'Low Price'
    when prod.cost > 5 AND prod.cost < 20 then  'Moderate Price'
    when prod.cost >= 20 then 'High Price'
    else 'Invalid price' 
	end) as "PRODUCT EVALUATION"
    from jj.product prod;

--*** Looks good	